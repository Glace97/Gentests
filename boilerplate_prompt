I need to generate unit tests for ${methodName} in ${className} using JUnit5 and Mockito. The tests should strictly follow the provided boilerplate structure. Hereâ€™s the boilerplate for each test method:

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class AnnotationUtilsTest {

    @Test
    public void testMethod() {
        // Instantiate all necessary variables here
        // Write the test code here following the given rules
    }
}

// Code to be tested
${MUT + context}

Rules to Follow:
1. All variables should be instantiated within the test method itself.
2. Do not access any private variables, methods, or classes directly.
3. Use Mockito for mocking dependencies and JUnit for assertions.
4. The test suite should strive to achieve high code and branch coverage, and cover edge cases.
5. Return the entire code section in one coherent piece.