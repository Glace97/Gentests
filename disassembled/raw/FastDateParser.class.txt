Compiled from "FastDateParser.java"
public class org.apache.commons.lang3.time.FastDateParser implements org.apache.commons.lang3.time.DateParser,java.io.Serializable {
  private static final long serialVersionUID;
  static final java.util.Locale JAPANESE_IMPERIAL;
  private static final java.util.Comparator<java.lang.String> LONGER_FIRST_LOWERCASE;
  private static final java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser$Strategy>[] caches;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy LITERAL_YEAR_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY;
  private static final org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY;
  private final java.lang.String pattern;
  private final java.util.TimeZone timeZone;
  private final java.util.Locale locale;
  private final int century;
  private final int startYear;
  private transient java.util.List<org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth> patterns;
  private static java.util.Map<java.lang.String, java.lang.Integer> appendDisplayNames(java.util.Calendar, java.util.Locale, int, java.lang.StringBuilder);
  private static java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser$Strategy> getCache(int);
  private static boolean isFormatLetter(char);
  private static java.lang.StringBuilder simpleQuote(java.lang.StringBuilder, java.lang.String);
  protected org.apache.commons.lang3.time.FastDateParser(java.lang.String, java.util.TimeZone, java.util.Locale);
  protected org.apache.commons.lang3.time.FastDateParser(java.lang.String, java.util.TimeZone, java.util.Locale, java.util.Date);
  private int adjustYear(int);
  public boolean equals(java.lang.Object);
  public java.util.Locale getLocale();
  private org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int, java.util.Calendar);
  public java.lang.String getPattern();
  private org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(char, int, java.util.Calendar);
  public java.util.TimeZone getTimeZone();
  public int hashCode();
  private void init(java.util.Calendar);
  public java.util.Date parse(java.lang.String) throws java.text.ParseException;
  public java.util.Date parse(java.lang.String, java.text.ParsePosition);
  public boolean parse(java.lang.String, java.text.ParsePosition, java.util.Calendar);
  public java.lang.Object parseObject(java.lang.String) throws java.text.ParseException;
  public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition);
  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
  public java.lang.String toString();
  public java.lang.String toStringAll();
  private org.apache.commons.lang3.time.FastDateParser$Strategy lambda$getLocaleSpecificStrategy$2(int, java.util.Calendar, java.util.Locale);
  private static void lambda$appendDisplayNames$1(java.lang.StringBuilder, java.lang.String);
  private static void lambda$appendDisplayNames$0(java.util.Locale, java.util.TreeSet, java.util.Map, java.lang.String, java.lang.Integer);
  static java.util.Map access$100(java.util.Calendar, java.util.Locale, int, java.lang.StringBuilder);
  static java.lang.String access$300(org.apache.commons.lang3.time.FastDateParser);
  static boolean access$400(char);
  static org.apache.commons.lang3.time.FastDateParser$Strategy access$500(org.apache.commons.lang3.time.FastDateParser, char, int, java.util.Calendar);
  static java.util.Comparator access$600();
  static java.lang.StringBuilder access$700(java.lang.StringBuilder, java.lang.String);
  static int access$800(org.apache.commons.lang3.time.FastDateParser, int);
  static {};
}
