Compiled from "EqualsBuilder.java"
public class org.apache.commons.lang3.builder.EqualsBuilder implements org.apache.commons.lang3.builder.Builder<java.lang.Boolean> {
  private static final java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>> REGISTRY;
  private boolean isEquals;
  private boolean testTransients;
  private boolean testRecursive;
  private java.util.List<java.lang.Class<?>> bypassReflectionClasses;
  private java.lang.Class<?> reflectUpToClass;
  private java.lang.String[] excludeFields;
  static org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> getRegisterPair(java.lang.Object, java.lang.Object);
  static java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> getRegistry();
  static boolean isRegistered(java.lang.Object, java.lang.Object);
  public static boolean reflectionEquals(java.lang.Object, java.lang.Object, boolean);
  public static boolean reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>, boolean, java.lang.String...);
  public static boolean reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>, java.lang.String...);
  public static boolean reflectionEquals(java.lang.Object, java.lang.Object, java.util.Collection<java.lang.String>);
  public static boolean reflectionEquals(java.lang.Object, java.lang.Object, java.lang.String...);
  private static void register(java.lang.Object, java.lang.Object);
  private static void unregister(java.lang.Object, java.lang.Object);
  public org.apache.commons.lang3.builder.EqualsBuilder();
  public org.apache.commons.lang3.builder.EqualsBuilder append(boolean, boolean);
  public org.apache.commons.lang3.builder.EqualsBuilder append(boolean[], boolean[]);
  public org.apache.commons.lang3.builder.EqualsBuilder append(byte, byte);
  public org.apache.commons.lang3.builder.EqualsBuilder append(byte[], byte[]);
  public org.apache.commons.lang3.builder.EqualsBuilder append(char, char);
  public org.apache.commons.lang3.builder.EqualsBuilder append(char[], char[]);
  public org.apache.commons.lang3.builder.EqualsBuilder append(double, double);
  public org.apache.commons.lang3.builder.EqualsBuilder append(double[], double[]);
  public org.apache.commons.lang3.builder.EqualsBuilder append(float, float);
  public org.apache.commons.lang3.builder.EqualsBuilder append(float[], float[]);
  public org.apache.commons.lang3.builder.EqualsBuilder append(int, int);
  public org.apache.commons.lang3.builder.EqualsBuilder append(int[], int[]);
  public org.apache.commons.lang3.builder.EqualsBuilder append(long, long);
  public org.apache.commons.lang3.builder.EqualsBuilder append(long[], long[]);
  public org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object, java.lang.Object);
  public org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object[], java.lang.Object[]);
  public org.apache.commons.lang3.builder.EqualsBuilder append(short, short);
  public org.apache.commons.lang3.builder.EqualsBuilder append(short[], short[]);
  private void appendArray(java.lang.Object, java.lang.Object);
  public org.apache.commons.lang3.builder.EqualsBuilder appendSuper(boolean);
  public java.lang.Boolean build();
  public boolean isEquals();
  public org.apache.commons.lang3.builder.EqualsBuilder reflectionAppend(java.lang.Object, java.lang.Object);
  private void reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>);
  public void reset();
  public org.apache.commons.lang3.builder.EqualsBuilder setBypassReflectionClasses(java.util.List<java.lang.Class<?>>);
  protected void setEquals(boolean);
  public org.apache.commons.lang3.builder.EqualsBuilder setExcludeFields(java.lang.String...);
  public org.apache.commons.lang3.builder.EqualsBuilder setReflectUpToClass(java.lang.Class<?>);
  public org.apache.commons.lang3.builder.EqualsBuilder setTestRecursive(boolean);
  public org.apache.commons.lang3.builder.EqualsBuilder setTestTransients(boolean);
  public java.lang.Object build();
  static {};
}
