Compiled from "Triple.java"
public abstract class org.apache.commons.lang3.tuple.Triple<L, M, R> implements java.lang.Comparable<org.apache.commons.lang3.tuple.Triple<L, M, R>>, java.io.Serializable {
  private static final long serialVersionUID;
  public static final org.apache.commons.lang3.tuple.Triple<?, ?, ?>[] EMPTY_ARRAY;
  public org.apache.commons.lang3.tuple.Triple();
  public static <L, M, R> org.apache.commons.lang3.tuple.Triple<L, M, R>[] emptyArray();
  public static <L, M, R> org.apache.commons.lang3.tuple.Triple<L, M, R> of(L, M, R);
  public static <L, M, R> org.apache.commons.lang3.tuple.Triple<L, M, R> ofNonNull(L, M, R);
  public int compareTo(org.apache.commons.lang3.tuple.Triple<L, M, R>);
  public boolean equals(java.lang.Object);
  public abstract L getLeft();
  public abstract M getMiddle();
  public abstract R getRight();
  public int hashCode();
  public java.lang.String toString();
  public java.lang.String toString(java.lang.String);
  public int compareTo(java.lang.Object);
  static {};
}
