Compiled from "StrTokenizer.java"
public class org.apache.commons.lang3.text.StrTokenizer implements java.util.ListIterator<java.lang.String>, java.lang.Cloneable {
  private static final org.apache.commons.lang3.text.StrTokenizer CSV_TOKENIZER_PROTOTYPE;
  private static final org.apache.commons.lang3.text.StrTokenizer TSV_TOKENIZER_PROTOTYPE;
  private char[] chars;
  private java.lang.String[] tokens;
  private int tokenPos;
  private org.apache.commons.lang3.text.StrMatcher delimMatcher;
  private org.apache.commons.lang3.text.StrMatcher quoteMatcher;
  private org.apache.commons.lang3.text.StrMatcher ignoredMatcher;
  private org.apache.commons.lang3.text.StrMatcher trimmerMatcher;
  private boolean emptyAsNull;
  private boolean ignoreEmptyTokens;
  private static org.apache.commons.lang3.text.StrTokenizer getCSVClone();
  public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance();
  public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(char[]);
  public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(java.lang.String);
  private static org.apache.commons.lang3.text.StrTokenizer getTSVClone();
  public static org.apache.commons.lang3.text.StrTokenizer getTSVInstance();
  public static org.apache.commons.lang3.text.StrTokenizer getTSVInstance(char[]);
  public static org.apache.commons.lang3.text.StrTokenizer getTSVInstance(java.lang.String);
  public org.apache.commons.lang3.text.StrTokenizer();
  public org.apache.commons.lang3.text.StrTokenizer(char[]);
  public org.apache.commons.lang3.text.StrTokenizer(char[], char);
  public org.apache.commons.lang3.text.StrTokenizer(char[], char, char);
  public org.apache.commons.lang3.text.StrTokenizer(char[], java.lang.String);
  public org.apache.commons.lang3.text.StrTokenizer(char[], org.apache.commons.lang3.text.StrMatcher);
  public org.apache.commons.lang3.text.StrTokenizer(char[], org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrMatcher);
  public org.apache.commons.lang3.text.StrTokenizer(java.lang.String);
  public org.apache.commons.lang3.text.StrTokenizer(java.lang.String, char);
  public org.apache.commons.lang3.text.StrTokenizer(java.lang.String, char, char);
  public org.apache.commons.lang3.text.StrTokenizer(java.lang.String, java.lang.String);
  public org.apache.commons.lang3.text.StrTokenizer(java.lang.String, org.apache.commons.lang3.text.StrMatcher);
  public org.apache.commons.lang3.text.StrTokenizer(java.lang.String, org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrMatcher);
  public void add(java.lang.String);
  private void addToken(java.util.List<java.lang.String>, java.lang.String);
  private void checkTokenized();
  public java.lang.Object clone();
  java.lang.Object cloneReset() throws java.lang.CloneNotSupportedException;
  public java.lang.String getContent();
  public org.apache.commons.lang3.text.StrMatcher getDelimiterMatcher();
  public org.apache.commons.lang3.text.StrMatcher getIgnoredMatcher();
  public org.apache.commons.lang3.text.StrMatcher getQuoteMatcher();
  public java.lang.String[] getTokenArray();
  public java.util.List<java.lang.String> getTokenList();
  public org.apache.commons.lang3.text.StrMatcher getTrimmerMatcher();
  public boolean hasNext();
  public boolean hasPrevious();
  public boolean isEmptyTokenAsNull();
  public boolean isIgnoreEmptyTokens();
  private boolean isQuote(char[], int, int, int, int);
  public java.lang.String next();
  public int nextIndex();
  public java.lang.String nextToken();
  public java.lang.String previous();
  public int previousIndex();
  public java.lang.String previousToken();
  private int readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>);
  private int readWithQuotes(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, int, int);
  public void remove();
  public org.apache.commons.lang3.text.StrTokenizer reset();
  public org.apache.commons.lang3.text.StrTokenizer reset(char[]);
  public org.apache.commons.lang3.text.StrTokenizer reset(java.lang.String);
  public void set(java.lang.String);
  public org.apache.commons.lang3.text.StrTokenizer setDelimiterChar(char);
  public org.apache.commons.lang3.text.StrTokenizer setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher);
  public org.apache.commons.lang3.text.StrTokenizer setDelimiterString(java.lang.String);
  public org.apache.commons.lang3.text.StrTokenizer setEmptyTokenAsNull(boolean);
  public org.apache.commons.lang3.text.StrTokenizer setIgnoredChar(char);
  public org.apache.commons.lang3.text.StrTokenizer setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher);
  public org.apache.commons.lang3.text.StrTokenizer setIgnoreEmptyTokens(boolean);
  public org.apache.commons.lang3.text.StrTokenizer setQuoteChar(char);
  public org.apache.commons.lang3.text.StrTokenizer setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher);
  public org.apache.commons.lang3.text.StrTokenizer setTrimmerMatcher(org.apache.commons.lang3.text.StrMatcher);
  public int size();
  protected java.util.List<java.lang.String> tokenize(char[], int, int);
  public java.lang.String toString();
  public void add(java.lang.Object);
  public void set(java.lang.Object);
  public java.lang.Object previous();
  public java.lang.Object next();
  static {};
}
