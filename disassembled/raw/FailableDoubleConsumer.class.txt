Compiled from "FailableDoubleConsumer.java"
public interface org.apache.commons.lang3.function.FailableDoubleConsumer<E extends java.lang.Throwable> {
  public static final org.apache.commons.lang3.function.FailableDoubleConsumer NOP;
  public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableDoubleConsumer<E> nop();
  public abstract void accept(double) throws E;
  public default org.apache.commons.lang3.function.FailableDoubleConsumer<E> andThen(org.apache.commons.lang3.function.FailableDoubleConsumer<E>);
  private void lambda$andThen$1(org.apache.commons.lang3.function.FailableDoubleConsumer, double) throws java.lang.Throwable;
  private static void lambda$static$0(double) throws java.lang.Throwable;
  static {};
}
