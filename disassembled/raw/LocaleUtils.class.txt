Compiled from "LocaleUtils.java"
public class org.apache.commons.lang3.LocaleUtils {
  private static final char UNDERSCORE;
  private static final java.lang.String UNDETERMINED;
  private static final char DASH;
  private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>> cLanguagesByCountry;
  private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>> cCountriesByLanguage;
  public static java.util.List<java.util.Locale> availableLocaleList();
  private static java.util.List<java.util.Locale> availableLocaleList(java.util.function.Predicate<java.util.Locale>);
  public static java.util.Set<java.util.Locale> availableLocaleSet();
  public static java.util.List<java.util.Locale> countriesByLanguage(java.lang.String);
  public static boolean isAvailableLocale(java.util.Locale);
  private static boolean isISO3166CountryCode(java.lang.String);
  private static boolean isISO639LanguageCode(java.lang.String);
  public static boolean isLanguageUndetermined(java.util.Locale);
  private static boolean isNumericAreaCode(java.lang.String);
  public static java.util.List<java.util.Locale> languagesByCountry(java.lang.String);
  public static java.util.List<java.util.Locale> localeLookupList(java.util.Locale);
  public static java.util.List<java.util.Locale> localeLookupList(java.util.Locale, java.util.Locale);
  private static java.util.Locale parseLocale(java.lang.String);
  public static java.util.Locale toLocale(java.util.Locale);
  public static java.util.Locale toLocale(java.lang.String);
  public org.apache.commons.lang3.LocaleUtils();
  private static java.util.List lambda$languagesByCountry$3(java.lang.String, java.lang.String);
  private static boolean lambda$languagesByCountry$2(java.lang.String, java.util.Locale);
  private static java.util.List lambda$countriesByLanguage$1(java.lang.String, java.lang.String);
  private static boolean lambda$countriesByLanguage$0(java.lang.String, java.util.Locale);
  static {};
}
