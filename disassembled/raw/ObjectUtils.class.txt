Compiled from "ObjectUtils.java"
public class org.apache.commons.lang3.ObjectUtils {
  private static final char AT_SIGN;
  public static final org.apache.commons.lang3.ObjectUtils$Null NULL;
  public static boolean allNotNull(java.lang.Object...);
  public static boolean allNull(java.lang.Object...);
  public static boolean anyNotNull(java.lang.Object...);
  public static boolean anyNull(java.lang.Object...);
  public static <T> T clone(T);
  public static <T> T cloneIfPossible(T);
  public static <T extends java.lang.Comparable<? super T>> int compare(T, T);
  public static <T extends java.lang.Comparable<? super T>> int compare(T, T, boolean);
  public static boolean CONST(boolean);
  public static byte CONST(byte);
  public static char CONST(char);
  public static double CONST(double);
  public static float CONST(float);
  public static int CONST(int);
  public static long CONST(long);
  public static short CONST(short);
  public static <T> T CONST(T);
  public static byte CONST_BYTE(int);
  public static short CONST_SHORT(int);
  public static <T> T defaultIfNull(T, T);
  public static boolean equals(java.lang.Object, java.lang.Object);
  public static <T> T firstNonNull(T...);
  public static <T> java.lang.Class<T> getClass(T);
  public static <T> T getFirstNonNull(java.util.function.Supplier<T>...);
  public static <T> T getIfNull(T, java.util.function.Supplier<T>);
  public static int hashCode(java.lang.Object);
  public static java.lang.String hashCodeHex(java.lang.Object);
  public static int hashCodeMulti(java.lang.Object...);
  public static java.lang.String identityHashCodeHex(java.lang.Object);
  public static void identityToString(java.lang.Appendable, java.lang.Object) throws java.io.IOException;
  public static java.lang.String identityToString(java.lang.Object);
  public static void identityToString(org.apache.commons.lang3.text.StrBuilder, java.lang.Object);
  public static void identityToString(java.lang.StringBuffer, java.lang.Object);
  public static void identityToString(java.lang.StringBuilder, java.lang.Object);
  public static boolean isArray(java.lang.Object);
  public static boolean isEmpty(java.lang.Object);
  public static boolean isNotEmpty(java.lang.Object);
  public static <T extends java.lang.Comparable<? super T>> T max(T...);
  public static <T> T median(java.util.Comparator<T>, T...);
  public static <T extends java.lang.Comparable<? super T>> T median(T...);
  public static <T extends java.lang.Comparable<? super T>> T min(T...);
  public static <T> T mode(T...);
  public static boolean notEqual(java.lang.Object, java.lang.Object);
  public static <T> T requireNonEmpty(T);
  public static <T> T requireNonEmpty(T, java.lang.String);
  public static java.lang.String toString(java.lang.Object);
  public static java.lang.String toString(java.lang.Object, java.lang.String);
  public static java.lang.String toString(java.util.function.Supplier<java.lang.Object>, java.util.function.Supplier<java.lang.String>);
  public static <T> java.lang.String toString(T, java.util.function.Supplier<java.lang.String>);
  public static void wait(java.lang.Object, java.time.Duration) throws java.lang.InterruptedException;
  public org.apache.commons.lang3.ObjectUtils();
  private static java.lang.Object lambda$getFirstNonNull$0(java.util.function.Supplier);
  static {};
}
