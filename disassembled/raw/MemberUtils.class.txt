Compiled from "MemberUtils.java"
final class org.apache.commons.lang3.reflect.MemberUtils {
  private static final int ACCESS_TEST;
  private static final java.lang.Class<?>[] ORDERED_PRIMITIVE_TYPES;
  org.apache.commons.lang3.reflect.MemberUtils();
  static int compareConstructorFit(java.lang.reflect.Constructor<?>, java.lang.reflect.Constructor<?>, java.lang.Class<?>[]);
  static int compareMethodFit(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Class<?>[]);
  private static int compareParameterTypes(org.apache.commons.lang3.reflect.MemberUtils$Executable, org.apache.commons.lang3.reflect.MemberUtils$Executable, java.lang.Class<?>[]);
  private static float getObjectTransformationCost(java.lang.Class<?>, java.lang.Class<?>);
  private static float getPrimitivePromotionCost(java.lang.Class<?>, java.lang.Class<?>);
  private static float getTotalTransformationCost(java.lang.Class<?>[], org.apache.commons.lang3.reflect.MemberUtils$Executable);
  static boolean isAccessible(java.lang.reflect.Member);
  static boolean isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Class<?>[]);
  private static boolean isMatchingExecutable(org.apache.commons.lang3.reflect.MemberUtils$Executable, java.lang.Class<?>[]);
  static boolean isMatchingMethod(java.lang.reflect.Method, java.lang.Class<?>[]);
  static boolean isPackageAccess(int);
  static boolean isPublic(java.lang.reflect.Member);
  static boolean isStatic(java.lang.reflect.Member);
  static <T extends java.lang.reflect.AccessibleObject> T setAccessibleWorkaround(T);
  static {};
}
