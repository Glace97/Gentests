Compiled from "FastDateFormat.java"
public class org.apache.commons.lang3.time.FastDateFormat extends java.text.Format implements org.apache.commons.lang3.time.DateParser,org.apache.commons.lang3.time.DatePrinter {
  private static final long serialVersionUID;
  public static final int FULL;
  public static final int LONG;
  public static final int MEDIUM;
  public static final int SHORT;
  private static final org.apache.commons.lang3.time.AbstractFormatCache<org.apache.commons.lang3.time.FastDateFormat> cache;
  private final org.apache.commons.lang3.time.FastDatePrinter printer;
  private final org.apache.commons.lang3.time.FastDateParser parser;
  public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(int);
  public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(int, java.util.Locale);
  public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(int, java.util.TimeZone);
  public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(int, java.util.TimeZone, java.util.Locale);
  public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int, int);
  public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int, int, java.util.Locale);
  public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int, int, java.util.TimeZone);
  public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int, int, java.util.TimeZone, java.util.Locale);
  public static org.apache.commons.lang3.time.FastDateFormat getInstance();
  public static org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String);
  public static org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String, java.util.Locale);
  public static org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String, java.util.TimeZone);
  public static org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String, java.util.TimeZone, java.util.Locale);
  public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int);
  public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int, java.util.Locale);
  public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int, java.util.TimeZone);
  public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int, java.util.TimeZone, java.util.Locale);
  protected org.apache.commons.lang3.time.FastDateFormat(java.lang.String, java.util.TimeZone, java.util.Locale);
  protected org.apache.commons.lang3.time.FastDateFormat(java.lang.String, java.util.TimeZone, java.util.Locale, java.util.Date);
  protected java.lang.StringBuffer applyRules(java.util.Calendar, java.lang.StringBuffer);
  public boolean equals(java.lang.Object);
  public java.lang.String format(java.util.Calendar);
  public <B extends java.lang.Appendable> B format(java.util.Calendar, B);
  public java.lang.StringBuffer format(java.util.Calendar, java.lang.StringBuffer);
  public java.lang.String format(java.util.Date);
  public <B extends java.lang.Appendable> B format(java.util.Date, B);
  public java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer);
  public java.lang.String format(long);
  public <B extends java.lang.Appendable> B format(long, B);
  public java.lang.StringBuffer format(long, java.lang.StringBuffer);
  public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition);
  public java.util.Locale getLocale();
  public int getMaxLengthEstimate();
  public java.lang.String getPattern();
  public java.util.TimeZone getTimeZone();
  public int hashCode();
  public java.util.Date parse(java.lang.String) throws java.text.ParseException;
  public java.util.Date parse(java.lang.String, java.text.ParsePosition);
  public boolean parse(java.lang.String, java.text.ParsePosition, java.util.Calendar);
  public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition);
  public java.lang.String toString();
  static {};
}
