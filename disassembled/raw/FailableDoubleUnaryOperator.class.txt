Compiled from "FailableDoubleUnaryOperator.java"
public interface org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E extends java.lang.Throwable> {
  public static final org.apache.commons.lang3.function.FailableDoubleUnaryOperator NOP;
  public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> identity();
  public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> nop();
  public default org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> andThen(org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E>);
  public abstract double applyAsDouble(double) throws E;
  public default org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> compose(org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E>);
  private double lambda$compose$3(org.apache.commons.lang3.function.FailableDoubleUnaryOperator, double) throws java.lang.Throwable;
  private double lambda$andThen$2(org.apache.commons.lang3.function.FailableDoubleUnaryOperator, double) throws java.lang.Throwable;
  private static double lambda$identity$1(double) throws java.lang.Throwable;
  private static double lambda$static$0(double) throws java.lang.Throwable;
  static {};
}
