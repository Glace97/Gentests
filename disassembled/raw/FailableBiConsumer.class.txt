Compiled from "FailableBiConsumer.java"
public interface org.apache.commons.lang3.function.FailableBiConsumer<T, U, E extends java.lang.Throwable> {
  public static final org.apache.commons.lang3.function.FailableBiConsumer NOP;
  public static <T, U, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableBiConsumer<T, U, E> nop();
  public abstract void accept(T, U) throws E;
  public default org.apache.commons.lang3.function.FailableBiConsumer<T, U, E> andThen(org.apache.commons.lang3.function.FailableBiConsumer<? super T, ? super U, E>);
  private void lambda$andThen$1(org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Object, java.lang.Object) throws java.lang.Throwable;
  private static void lambda$static$0(java.lang.Object, java.lang.Object) throws java.lang.Throwable;
  static {};
}
