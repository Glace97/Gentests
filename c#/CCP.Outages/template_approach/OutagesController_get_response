using Xunit;
using Moq;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using CCP.Outages.Api.Controllers;
using CCP.Outages.Api.Repositories;
using CCP.Outages.Api.Models;
using CCP.Outages.Api.Helpers;
using CCP.Outages.Client.Exceptions;
using Localization.Client;
using Microsoft.AspNetCore.Mvc;

namespace CCP.Outages.Api.Tests
{
    public class OutagesControllerTest
    {
        [Fact]
        public async Task Get_WhenCalledWithNullAcceptLanguage_ThrowsInvalidInputException()
        {
            // Instantiate all necessary variables here
            var mockOutageRepository = new Mock<IOutageRepository>();
            var mockLocalizationClient = new Mock<ILocalizationClient>();
            var mockMappers = new Mock<IMappers>();
            var controller = new OutagesController(mockOutageRepository.Object, mockLocalizationClient.Object, mockMappers.Object);
            IEnumerable<string> appNames = new List<string> { "app1", "app2" };
            string acceptLanguage = null;

            // Write the test code here following the given rules
            await Assert.ThrowsAsync<InvalidInputException>(() => controller.Get(appNames, acceptLanguage));
        }

        [Fact]
        public async Task Get_WhenCalledWithValidParameters_ReturnsOkResult()
        {
            // Instantiate all necessary variables here
            var mockOutageRepository = new Mock<IOutageRepository>();
            var mockLocalizationClient = new Mock<ILocalizationClient>();
            var mockMappers = new Mock<IMappers>();
            var controller = new OutagesController(mockOutageRepository.Object, mockLocalizationClient.Object, mockMappers.Object);
            IEnumerable<string> appNames = new List<string> { "app1", "app2" };
            string acceptLanguage = "en-US";

            // Write the test code here following the given rules
            var result = await controller.Get(appNames, acceptLanguage);
            Assert.IsType<OkObjectResult>(result);
        }

        // Add more test methods here
    }
}